---
source: tests/test_runner.rs
expression: stripped_actual_output.trim()
---
============
INPUT
============
class List<T>
  = nil
  | cons { current: T, next: List<T> }

let<T, U> bomb (xs: List<T>) (f: T -> U): Int =
  xs .(
    -> nil [ 1 ]
    -> cons { current = _, next = nil } [ 0 ]
 )

============
EXIT CODE
============
1

============
STDOUT
============


============
STDERR
============
error:
  ┌─ tests/compiler/typecheck/case_exhaustiveness_enum_1/case_exhaustiveness_enum_1.kk:7:8
  │
7 │       -> nil [ 1 ]
  │ ╭────────^
8 │ │     -> cons { current = _, next = nil } [ 0 ]
  │ ╰───────────────────────────────────────────^ Non-exhaustive cases
  │
  = Missing case(s):

      cons({ current = _, next = cons(_) })
