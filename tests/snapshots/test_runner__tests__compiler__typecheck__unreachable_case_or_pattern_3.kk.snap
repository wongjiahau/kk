---
source: tests/test_runner.rs
expression: stripped_actual_output.trim()
---
============
INPUT
============
type Nat = case zero case succ(Nat)| succ(Nat)

let foo (n : Nat) : Int =
  {
    \zero | zero -> 1
          // ^^^^^ Error: unreachable case
  } (n)

============
EXIT CODE
============
1

============
STDOUT
============


============
STDERR
============
error:
  ┌─ tests/compiler/typecheck/unreachable_case_or_pattern_3.kk:5:14
  │
5 │     \zero | zero -> 1
  │              ^^^^^ Partially unreachable case
  │
  = This case is partially unreachable because it contains a redundant pattern that is already handled by previous cases.
    Namely:

        zero
