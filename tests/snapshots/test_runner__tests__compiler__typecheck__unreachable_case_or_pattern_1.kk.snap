---
source: tests/test_runner.rs
expression: stripped_actual_output.trim()
---
============
INPUT
============
enum Nat {
  Zero,
  Succ(Nat)
}

let foo = (n: Nat): Boolean =>
  switch (n) {
    case Succ(Succ(Zero)): true
    case Succ(Zero | Succ(Zero)): false
    //   ^^^^^^^^^^^^^^^^^^^^^^^ Error: partially unreachable case, namely `Succ(Succ(Zero))`
  }

============
EXIT CODE
============
1

============
STDOUT
============


============
STDERR
============
error:
  ┌─ tests/compiler/typecheck/unreachable_case_or_pattern_1.kk:9:10
  │
9 │     case Succ(Zero | Succ(Zero)): false
  │          ^^^^^^^^^^^^^^^^^^^^^^^ Partially unreachable case
  │
  = This case is partially unreachable because it contains a redundant pattern that is already handled by previous cases.
    Namely:

        Succ(Succ(Zero))
