---
source: tests/test_runner.rs
expression: stripped_actual_output.trim()
---
============
INPUT
============
enum Foo {
  A,
  B
}

let foo = (x: Foo, y: Foo): Boolean =>
  switch {x, y} {
    case {x: A | B, y: A}: true
    case {x: A | B, y: A | B}: true
      // ^^^^^^^^^^^^^^^^^^^^
      // Error: this pattern contains a an unreachable subpattern, namely:
      //    {x: A, y: A}
  }

============
EXIT CODE
============
1

============
STDOUT
============


============
STDERR
============
error:
  ┌─ tests/compiler/typecheck/unreachable_case_or_pattern_2.kk:9:10
  │
9 │     case {x: A | B, y: A | B}: true
  │          ^^^^^^^^^^^^^^^^^^^^ Partially unreachable case
  │
  = This case is partially unreachable because it contains a redundant pattern that is already handled by previous cases.
    Namely:

        {x: A, y: A}
