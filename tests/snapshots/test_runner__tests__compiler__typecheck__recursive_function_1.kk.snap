---
source: tests/test_runner.rs
expression: stripped_actual_output.trim()
---
============
INPUT
============
type List<T> = #nil | #cons(head: T, tail: List<T>)

let <T, U> map (xs: List<T>) (f: T -> U) : List<U> =
  {
    \#nil -> #nil
    \#cons(head, tail) -> #cons(head = head f, tail = tail map { \t -> (t = t f)})
                                                  //  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: expected List<U>, but got List<{t: U}>
  } (xs)

============
EXIT CODE
============
1

============
STDOUT
============


============
STDERR
============
error:
  ┌─ tests/compiler/typecheck/recursive_function_1.kk:6:55
  │
6 │     \#cons(head, tail) -> #cons(head = head f, tail = tail map { \t -> (t = t f)})
  │                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ Type mismatch
  │
  = +---------------+-------------+
    | EXPECTED TYPE | ACTUAL TYPE |
    +---------------+-------------+
    |   List<       |   List<     |
    | -   U         | +   (       |
    |   >           | +     t =   |
    |               | +       U,  |
    |               | +   )       |
    |               |   >         |
    +---------------+-------------+
