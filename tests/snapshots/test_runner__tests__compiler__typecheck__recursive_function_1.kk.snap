---
source: tests/test_runner.rs
expression: stripped_actual_output.trim()
---
============
INPUT
============
enum List<T> {
  Nil,
  Cons({head: T, tail: List<T>})
}

let map = <T, U>(xs: List<T>, f: (t: T) => U): List<U> =>
  switch xs {
    case Nil:
      Nil
    case Cons({head, tail}):
      Cons({head: head.f(), tail: tail.map(t => {t: t.f()})})
                              //  ^^^^^^^^^^^^^^^^^^^^^^^^^ Error: expected List<U>, but got List<{t: U}>
  }

============
EXIT CODE
============
1

============
STDOUT
============


============
STDERR
============
error:
   ┌─ tests/compiler/typecheck/recursive_function_1.kk:11:35
   │
11 │       Cons({head: head.f(), tail: tail.map(t => {t: t.f()})})
   │                                   ^^^^^^^^^^^^^^^^^^^^^^^^^ Type mismatch
   │
   = +---------------+-------------+
     | EXPECTED TYPE | ACTUAL TYPE |
     +---------------+-------------+
     |   List<       |   List<     |
     | -   U         | +   {       |
     |   >           | +     t:    |
     |               | +       U,  |
     |               | +   }       |
     |               |   >         |
     +---------------+-------------+
