---
source: tests/test_runner.rs
expression: stripped_actual_output.trim()
---
============
INPUT
============
// Expects no error
class Option<T> = some(T) | none

let<A, B> (o : Option<A>) .map (f : A [ Option ]<B>) : Option<B> =
  o .(
    -> some(o) [ o ] .f
    -> none [ none ]
  )

let foo (a : Option<{ bar : String }>): Option<String> =
  ~map (some (a !.bar))

entry
  some { bar = "hello world" } .foo .print;
  none .foo .print

============
EXIT CODE
============
1

============
STDOUT
============


============
STDERR
============
error:
  ┌─ tests/compiler/typecheck/cps_sugar_2/cps_sugar_2.kk:4:39
  │
4 │ let<A, B> (o : Option<A>) .map (f : A [ Option ]<B>) : Option<B> =
  │                                       ^ Syntax error: not expecting `[` here
  │
  = The expected token here is `)`.

    Note that `[` is used for creating and destructuring array, for example:

    [1 2 3].
